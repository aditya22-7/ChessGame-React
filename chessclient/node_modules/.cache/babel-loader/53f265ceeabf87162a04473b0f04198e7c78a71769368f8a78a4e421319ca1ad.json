{"ast":null,"code":"var _jsxFileName = \"/home/adis-dell/Documents/JS/JS_rpise2/Chess_React/chessclient/src/BoardSet.js\",\n  _s = $RefreshSig$();\nimport { useMemo } from \"react\";\nimport Board from \"./Board\";\nimport { useData } from \"./data-provider\";\nimport DisplayName from \"./DisplayName\";\nimport { compose, reverseData, inc, dsc, asc } from \"./helper-funcs\";\nimport { useLogin } from \"./LoginProvider\";\nimport MiddelFlexBox from \"./MiddleFlexBox\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BoardSet() {\n  _s();\n  let {\n    board,\n    file,\n    turn,\n    gameOver,\n    side\n  } = useData();\n  const {\n    player1,\n    player2\n  } = useLogin();\n  const getStatus = val => gameOver ? true : val;\n  const memoReverseFile = useMemo(() => reverseData(file), [file]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MiddelFlexBox, {\n      children: /*#__PURE__*/_jsxDEV(DisplayName, {\n        children: `${player1} VS ${player2}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MiddelFlexBox, {\n      children: [side === \"white\" && /*#__PURE__*/_jsxDEV(Board, {\n        board: board,\n        file: file,\n        func: compose(inc, dsc),\n        disable: getStatus(turn)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 6\n      }, this), side === \"black\" && /*#__PURE__*/_jsxDEV(Board, {\n        board: reverseData(board),\n        file: memoReverseFile,\n        func: compose(inc, asc),\n        disable: getStatus(turn)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(BoardSet, \"mkzqt1oEVLOksoFvmi2LGWnWsT8=\", false, function () {\n  return [useData, useLogin];\n});\n_c = BoardSet;\nvar _c;\n$RefreshReg$(_c, \"BoardSet\");","map":{"version":3,"names":["useMemo","Board","useData","DisplayName","compose","reverseData","inc","dsc","asc","useLogin","MiddelFlexBox","jsxDEV","_jsxDEV","Fragment","_Fragment","BoardSet","_s","board","file","turn","gameOver","side","player1","player2","getStatus","val","memoReverseFile","children","fileName","_jsxFileName","lineNumber","columnNumber","func","disable","_c","$RefreshReg$"],"sources":["/home/adis-dell/Documents/JS/JS_rpise2/Chess_React/chessclient/src/BoardSet.js"],"sourcesContent":["import { useMemo } from \"react\";\nimport Board from \"./Board\";\nimport { useData } from \"./data-provider\";\nimport DisplayName from \"./DisplayName\";\nimport { compose, reverseData, inc, dsc, asc } from \"./helper-funcs\";\nimport { useLogin } from \"./LoginProvider\";\nimport MiddelFlexBox from \"./MiddleFlexBox\";\n\nexport default function BoardSet() {\n\tlet { board, file, turn, gameOver, side } = useData();\n\tconst { player1, player2 } = useLogin();\n\tconst getStatus = (val) => (gameOver ? true : val);\n\tconst memoReverseFile = useMemo(() => reverseData(file), [file]);\n\treturn (\n\t\t<>\n\t\t\t<MiddelFlexBox>\n\t\t\t\t<DisplayName>{`${player1} VS ${player2}`}</DisplayName>\n\t\t\t</MiddelFlexBox>\n\t\t\t<MiddelFlexBox>\n\t\t\t\t{side === \"white\" && (\n\t\t\t\t\t<Board\n\t\t\t\t\t\tboard={board}\n\t\t\t\t\t\tfile={file}\n\t\t\t\t\t\tfunc={compose(inc, dsc)}\n\t\t\t\t\t\tdisable={getStatus(turn)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{side === \"black\" && (\n\t\t\t\t\t<Board\n\t\t\t\t\t\tboard={reverseData(board)}\n\t\t\t\t\t\tfile={memoReverseFile}\n\t\t\t\t\t\tfunc={compose(inc, asc)}\n\t\t\t\t\t\tdisable={getStatus(turn)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</MiddelFlexBox>\n\t\t</>\n\t);\n}\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,OAAO,EAAEC,WAAW,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;AACpE,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClC,IAAI;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGnB,OAAO,CAAC,CAAC;EACrD,MAAM;IAAEoB,OAAO;IAAEC;EAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC;EACvC,MAAMe,SAAS,GAAIC,GAAG,IAAML,QAAQ,GAAG,IAAI,GAAGK,GAAI;EAClD,MAAMC,eAAe,GAAG1B,OAAO,CAAC,MAAMK,WAAW,CAACa,IAAI,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAChE,oBACCN,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACCf,OAAA,CAACF,aAAa;MAAAiB,QAAA,eACbf,OAAA,CAACT,WAAW;QAAAwB,QAAA,EAAE,GAAGL,OAAO,OAAOC,OAAO;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eAChBnB,OAAA,CAACF,aAAa;MAAAiB,QAAA,GACZN,IAAI,KAAK,OAAO,iBAChBT,OAAA,CAACX,KAAK;QACLgB,KAAK,EAAEA,KAAM;QACbC,IAAI,EAAEA,IAAK;QACXc,IAAI,EAAE5B,OAAO,CAACE,GAAG,EAAEC,GAAG,CAAE;QACxB0B,OAAO,EAAET,SAAS,CAACL,IAAI;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACD,EACAV,IAAI,KAAK,OAAO,iBAChBT,OAAA,CAACX,KAAK;QACLgB,KAAK,EAAEZ,WAAW,CAACY,KAAK,CAAE;QAC1BC,IAAI,EAAEQ,eAAgB;QACtBM,IAAI,EAAE5B,OAAO,CAACE,GAAG,EAAEE,GAAG,CAAE;QACxByB,OAAO,EAAET,SAAS,CAACL,IAAI;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa,CAAC;EAAA,eACf,CAAC;AAEL;AAACf,EAAA,CA9BuBD,QAAQ;EAAA,QACab,OAAO,EACtBO,QAAQ;AAAA;AAAAyB,EAAA,GAFdnB,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}