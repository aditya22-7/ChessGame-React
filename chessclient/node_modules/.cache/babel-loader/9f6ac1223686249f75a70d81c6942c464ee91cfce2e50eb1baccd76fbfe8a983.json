{"ast":null,"code":"export const reverseData = data => [...data].map(val => {\n  if (Array.isArray(val)) {\n    return [...val].reverse();\n  } else {\n    return val;\n  }\n}).reverse();\nexport const deepCopy = data => [...data].map(val => {\n  if (Array.isArray(val)) {\n    return [...val];\n  } else return val;\n});\nexport const divide = (arr, size) => {};\nexport const dsc = ([data]) => data;\nexport const asc = ([data, size]) => size - data;\nexport const inc = data => data.map(val => val + 1);\nexport const dec = (...data) => data.map(val => val - 1);\nexport const compose = (...funs) => (...vals) => funs.reduce((prev, curr) => curr(prev), vals);\nexport const mod = (val1, val2, ret) => (val1 + val2) % 2 === 0 ? ret[0] : ret[1];\nexport const select = (cond, style, ...vals) => cond ? style : mod(...vals);\nexport const getVal = (data, row, col) => data[row - 1][col - 1];\nexport const empty = () => {};","map":{"version":3,"names":["reverseData","data","map","val","Array","isArray","reverse","deepCopy","divide","arr","size","dsc","asc","inc","dec","compose","funs","vals","reduce","prev","curr","mod","val1","val2","ret","select","cond","style","getVal","row","col","empty"],"sources":["/home/adis-dell/Documents/JS/JS_rpise2/Chess_React/chessclient/src/helper-funcs.js"],"sourcesContent":["export const reverseData = (data) =>\n\t[...data]\n\t\t.map((val) => {\n\t\t\tif (Array.isArray(val)) {\n\t\t\t\treturn [...val].reverse();\n\t\t\t} else {\n\t\t\t\treturn val;\n\t\t\t}\n\t\t})\n\t\t.reverse();\n\nexport const deepCopy = (data) =>\n\t[...data].map((val) => {\n\t\tif (Array.isArray(val)) {\n\t\t\treturn [...val];\n\t\t} else return val;\n\t});\n\nexport const divide = (arr, size) => {};\n\nexport const dsc = ([data]) => data;\n\nexport const asc = ([data, size]) => size - data;\n\nexport const inc = (data) => data.map((val) => val + 1);\n\nexport const dec = (...data) => data.map((val) => val - 1);\n\nexport const compose =\n\t(...funs) =>\n\t(...vals) =>\n\t\tfuns.reduce((prev, curr) => curr(prev), vals);\n\nexport const mod = (val1, val2, ret) =>\n\t(val1 + val2) % 2 === 0 ? ret[0] : ret[1];\n\nexport const select = (cond, style, ...vals) => (cond ? style : mod(...vals));\n\nexport const getVal = (data, row, col) => data[row - 1][col - 1];\n\nexport const empty = () => {};\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,IAAI,IAC/B,CAAC,GAAGA,IAAI,CAAC,CACPC,GAAG,CAAEC,GAAG,IAAK;EACb,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;IACvB,OAAO,CAAC,GAAGA,GAAG,CAAC,CAACG,OAAO,CAAC,CAAC;EAC1B,CAAC,MAAM;IACN,OAAOH,GAAG;EACX;AACD,CAAC,CAAC,CACDG,OAAO,CAAC,CAAC;AAEZ,OAAO,MAAMC,QAAQ,GAAIN,IAAI,IAC5B,CAAC,GAAGA,IAAI,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAK;EACtB,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;IACvB,OAAO,CAAC,GAAGA,GAAG,CAAC;EAChB,CAAC,MAAM,OAAOA,GAAG;AAClB,CAAC,CAAC;AAEH,OAAO,MAAMK,MAAM,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK,CAAC,CAAC;AAEvC,OAAO,MAAMC,GAAG,GAAGA,CAAC,CAACV,IAAI,CAAC,KAAKA,IAAI;AAEnC,OAAO,MAAMW,GAAG,GAAGA,CAAC,CAACX,IAAI,EAAES,IAAI,CAAC,KAAKA,IAAI,GAAGT,IAAI;AAEhD,OAAO,MAAMY,GAAG,GAAIZ,IAAI,IAAKA,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,GAAG,CAAC,CAAC;AAEvD,OAAO,MAAMW,GAAG,GAAGA,CAAC,GAAGb,IAAI,KAAKA,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,GAAG,CAAC,CAAC;AAE1D,OAAO,MAAMY,OAAO,GACnBA,CAAC,GAAGC,IAAI,KACR,CAAC,GAAGC,IAAI,KACPD,IAAI,CAACE,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKA,IAAI,CAACD,IAAI,CAAC,EAAEF,IAAI,CAAC;AAE/C,OAAO,MAAMI,GAAG,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEC,GAAG,KAClC,CAACF,IAAI,GAAGC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAGC,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC;AAE1C,OAAO,MAAMC,MAAM,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAE,GAAGV,IAAI,KAAMS,IAAI,GAAGC,KAAK,GAAGN,GAAG,CAAC,GAAGJ,IAAI,CAAE;AAE7E,OAAO,MAAMW,MAAM,GAAGA,CAAC3B,IAAI,EAAE4B,GAAG,EAAEC,GAAG,KAAK7B,IAAI,CAAC4B,GAAG,GAAG,CAAC,CAAC,CAACC,GAAG,GAAG,CAAC,CAAC;AAEhE,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}