{"ast":null,"code":"var _jsxFileName = \"/home/adis-dell/Documents/JS/JS_rpise2/Chess_React/chessclient/src/Status.js\",\n  _s = $RefreshSig$();\nimport { useData } from \"./data-provider\";\nimport { useLogin } from \"./LoginProvider\";\nimport MiddelFlexBox from \"./MiddleFlexBox\";\nimport { MemoDisplayName } from \"./DisplayName\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Status() {\n  _s();\n  const {\n    status\n  } = useData();\n  const {\n    player2\n  } = useLogin();\n  let text;\n  switch (status) {\n    case \"Waiting for other player\":\n      text = `Waiting for ${player2} to make a move..`;\n      break;\n    default:\n      text = status;\n  }\n  return /*#__PURE__*/_jsxDEV(MiddelFlexBox, {\n    children: /*#__PURE__*/_jsxDEV(MemoDisplayName, {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n}\n_s(Status, \"nHhM5+PvFlvYiy3//D82eAfBb3Q=\", false, function () {\n  return [useData, useLogin];\n});\n_c = Status;\nvar _c;\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"names":["useData","useLogin","MiddelFlexBox","MemoDisplayName","jsxDEV","_jsxDEV","Status","_s","status","player2","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/adis-dell/Documents/JS/JS_rpise2/Chess_React/chessclient/src/Status.js"],"sourcesContent":["import { useData } from \"./data-provider\";\nimport { useLogin } from \"./LoginProvider\";\nimport MiddelFlexBox from \"./MiddleFlexBox\";\nimport { MemoDisplayName } from \"./DisplayName\";\n\nexport default function Status() {\n\tconst { status } = useData();\n\tconst { player2 } = useLogin();\n\tlet text;\n\tswitch (status) {\n\t\tcase \"Waiting for other player\":\n\t\t\ttext = `Waiting for ${player2} to make a move..`;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttext = status;\n\t}\n\treturn (\n\t\t<MiddelFlexBox>\n\t\t\t<MemoDisplayName>{text}</MemoDisplayName>\n\t\t</MiddelFlexBox>\n\t);\n}\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAO,CAAC,GAAGR,OAAO,CAAC,CAAC;EAC5B,MAAM;IAAES;EAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC9B,IAAIS,IAAI;EACR,QAAQF,MAAM;IACb,KAAK,0BAA0B;MAC9BE,IAAI,GAAG,eAAeD,OAAO,mBAAmB;MAChD;IACD;MACCC,IAAI,GAAGF,MAAM;EACf;EACA,oBACCH,OAAA,CAACH,aAAa;IAAAS,QAAA,eACbN,OAAA,CAACF,eAAe;MAAAQ,QAAA,EAAED;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAElB;AAACR,EAAA,CAhBuBD,MAAM;EAAA,QACVN,OAAO,EACNC,QAAQ;AAAA;AAAAe,EAAA,GAFLV,MAAM;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}